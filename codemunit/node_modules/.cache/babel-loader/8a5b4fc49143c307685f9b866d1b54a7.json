{"ast":null,"code":"import _defineProperty from \"/home/bennie/Desktop/project/codemunit-frontend/codemunit/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/bennie/Desktop/project/codemunit-frontend/codemunit/src/Users/Signup.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Link, withRouter } from \"react-router-dom\";\nimport { FaFacebookF, FaGooglePlusG } from \"react-icons/all\";\nconst emailReg = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\nconst passwordReg = RegExp(/^(?=.*\\d)(?=.*[a-z])(?=.*)[0-9a-zA-Z]{6,}$/);\n\nconst formValid = (formErrors, ...rest) => {\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (formValid(this.state.formErrors)) {\n        this.props.history.push(\"/en/dashboard\");\n      } else {\n        console.error(this.state.formErrors);\n      }\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n\n      let formErrors = _objectSpread({}, this.state.formErrors);\n\n      let password = this.state.password;\n      let confirmPassword = this.state.confirmPassword;\n      const passwordMatch = password === confirmPassword ? true : false;\n\n      switch (name) {\n        case 'Name':\n          formErrors.Name = value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n          break;\n\n        case 'username':\n          formErrors.username = value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n          break;\n\n        case 'email':\n          formErrors.email = value.length === 0 && !emailReg.test(value) ? \"Enter a valid email address\" : \"\";\n          break;\n\n        case 'password':\n          formErrors.password = !passwordReg.test(value) ? \"Your password isn't strong\" : \"\";\n          break;\n\n        case 'confirmPassword':\n          formErrors.confirmPassword = !passwordMatch ? \"Passwords must match\" : console.log(pass);\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log(this.state));\n    };\n\n    this.state = {\n      Name: null,\n      username: null,\n      email: null,\n      password: null,\n      confirmPassword: null,\n      formErrors: {\n        Name: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      }\n    };\n  }\n\n  render() {\n    const formErrors = this.state.formErrors;\n    return React.createElement(\"div\", {\n      className: \"form-container sign-up-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Create an account\"), React.createElement(\"div\", {\n      className: \"social-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(FaFacebookF, {\n      className: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(Link, {\n      to: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(FaGooglePlusG, {\n      className: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }))), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"or use your email for registration\"), React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"name-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Your Name:\"), React.createElement(\"input\", {\n      className: formErrors.Name.length > 0 ? \"error\" : null,\n      placeholder: \"Name\",\n      type: \"text\",\n      name: \"Name\",\n      noValidate: true,\n      onBlur: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), formErrors.Name.length > 0 && React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, formErrors.Name, console.log(formErrors.Name))), React.createElement(\"div\", {\n      className: \"name-username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Username:\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: formErrors.username.length > 0 ? \"error\" : null,\n      name: \"username\",\n      noValidate: true,\n      onBlur: this.handleChange,\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), formErrors.username.length > 0 && React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, formErrors.username))), React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Email Address:\"), React.createElement(\"input\", {\n      type: \"email\",\n      className: formErrors.email.length > 0 ? \"error\" : null,\n      name: \"email\",\n      id: \"email\",\n      noValidate: true,\n      onBlur: this.handleChange,\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), formErrors.email.length > 0 && React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, formErrors.email), React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Password:\"), React.createElement(\"input\", {\n      type: \"password\",\n      className: formErrors.password.length > 0 ? \"error\" : null,\n      name: \"password\",\n      id: \"password\",\n      autoComplete: \"new-password\",\n      noValidate: true,\n      onBlur: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), formErrors.password.length > 0 && React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, formErrors.password), React.createElement(\"label\", {\n      htmlFor: \"confirmPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Confirm password:\"), React.createElement(\"input\", {\n      type: \"password\",\n      className: formErrors.confirmPassword.length > 0 ? \"error\" : null,\n      name: \"confirmPassword\",\n      id: \"confirmPassword\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), formErrors.confirmPassword.length > 0 && React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, formErrors.confirmPassword), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"by registering you agree with our \", React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"terms and conditions\")), React.createElement(\"button\", {\n      className: \"btn-primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Register\")));\n  }\n\n}\n\n;\nexport default withRouter(Signup);","map":{"version":3,"sources":["/home/bennie/Desktop/project/codemunit-frontend/codemunit/src/Users/Signup.js"],"names":["React","Component","Link","withRouter","FaFacebookF","FaGooglePlusG","emailReg","RegExp","passwordReg","formValid","formErrors","rest","valid","Object","values","forEach","val","length","Signup","constructor","props","handleSubmit","e","preventDefault","state","history","push","console","error","handleChange","target","name","value","password","confirmPassword","passwordMatch","Name","username","email","test","log","pass","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link, withRouter } from \"react-router-dom\"\nimport { FaFacebookF, FaGooglePlusG } from \"react-icons/all\"\n\nconst emailReg = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)\nconst passwordReg = RegExp(/^(?=.*\\d)(?=.*[a-z])(?=.*)[0-9a-zA-Z]{6,}$/);\n\nconst formValid = (formErrors, ...rest) => {\n    let valid = true;\n\n    // validate form errors being empty\n    Object.values(formErrors).forEach(val => {\n        val.length > 0 && (valid = false);\n    });\n\n    // validate the form was filled out\n    Object.values(rest).forEach(val => {\n        val === null && (valid = false);\n    });\n\n    return valid;\n}\n\nclass Signup extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            Name: null,\n            username: null,\n            email: null,\n            password: null,\n            confirmPassword: null,\n            formErrors: {\n                Name: \"\",\n                username: \"\",\n                email: \"\",\n                password: \"\",\n                confirmPassword: \"\"\n            }\n        };\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        if (formValid(this.state.formErrors)) {\n            this.props.history.push(\"/en/dashboard\");\n        } else {\n            console.error(this.state.formErrors);\n        }\n    }\n\n    handleChange = e => {\n        e.preventDefault();\n        const { name, value } = e.target;\n        let formErrors = { ...this.state.formErrors };\n        let password = this.state.password;\n        let confirmPassword = this.state.confirmPassword;\n        const passwordMatch = password === confirmPassword?true: false;\n\n        switch (name) {\n            case 'Name':\n                formErrors.Name =\n                value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n            break;\n            case 'username':\n                formErrors.username =\n                value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n            break;\n            case 'email':\n                formErrors.email = (value.length === 0 && !emailReg.test(value)) ?\"Enter a valid email address\":\"\";\n            break;\n            case 'password':\n                formErrors.password = !passwordReg.test(value) ? \"Your password isn't strong\":\"\";\n            break;\n            case 'confirmPassword':\n                formErrors.confirmPassword = (!passwordMatch) ? \"Passwords must match\":console.log(pass);\n            break;\n            default:\n             break;\n        }\n\n        this.setState({ formErrors, [name]: value }, () => console.log(this.state));\n    };\n\n\n    render() {\n        const { formErrors } = this.state;\n        return (\n            <div className=\"form-container sign-up-container\">\n                <form onSubmit={this.handleSubmit}>\n                    <h1>Create an account</h1>\n                    <div className=\"social-container\">\n                        <Link to=\"\"><FaFacebookF className=\"icon\"/></Link>\n                        <Link to=\"\"><FaGooglePlusG className=\"icon\"/></Link>\n                    </div>\n                    <span>or use your email for registration</span>\n                    <div className=\"name\">\n                        <div className=\"name-name\">\n                            <label htmlFor=\"name\">Your Name:</label>\n                            <input\n                                className={formErrors.Name.length > 0 ? \"error\" : null}\n                                placeholder=\"Name\"\n                                type=\"text\"\n                                name=\"Name\"\n                                noValidate\n                                onBlur={this.handleChange}\n                            />\n                            {formErrors.Name.length > 0 && (\n                                <small>{formErrors.Name}{console.log(formErrors.Name)}</small>\n                            )}\n                        </div>\n                        <div className=\"name-username\">\n                            <label htmlFor=\"username\">Username:</label>\n                            <input type=\"text\" className={formErrors.username.length > 0 ? \"error\" : null} name=\"username\" noValidate onBlur={this.handleChange} placeholder=\"Username\"/>\n                            {formErrors.username.length > 0 && (\n                                <small>{formErrors.username}</small>\n                            )}\n                        </div>\n                    </div>\n                    <label htmlFor=\"email\">Email Address:</label>\n                    <input type=\"email\" className={formErrors.email.length > 0 ? \"error\" : null} name=\"email\" id=\"email\" noValidate onBlur={this.handleChange} placeholder=\"Email\"/>\n                    {formErrors.email.length > 0 && (\n                        <small>{formErrors.email}</small>\n                    )}\n                    <label htmlFor=\"password\">Password:</label>\n                    <input type=\"password\" className={formErrors.password.length > 0 ? \"error\" : null} name=\"password\" id=\"password\" autoComplete=\"new-password\" noValidate onBlur={this.handleChange}/>\n                    {formErrors.password.length > 0 && (\n                        <small>{formErrors.password}</small>\n                    )}\n                    <label htmlFor=\"confirmPassword\">Confirm password:</label>\n                    <input type=\"password\" className={formErrors.confirmPassword.length > 0 ? \"error\" : null} name=\"confirmPassword\" id=\"confirmPassword\" noValidate onChange={this.handleChange}/>\n                    {formErrors.confirmPassword.length > 0 && (\n                        <small>{formErrors.confirmPassword}</small>\n                    )}\n                    <span>by registering you agree with our <Link to=\"/\">terms and conditions</Link></span>\n                    {/* I've to add countries for user to choose where they come from */}\n                    <button className=\"btn-primary\" type=\"submit\">Register</button>\n                </form>\n            </div>\n        )\n    }\n};\n\nexport default withRouter(Signup);"]},"metadata":{},"sourceType":"module"}