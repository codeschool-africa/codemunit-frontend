{"ast":null,"code":"import _defineProperty from \"/home/bennie/Desktop/project/codemunit-frontend/codemunit/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/bennie/Desktop/project/codemunit-frontend/codemunit/src/Users/Passwordrec.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nconst emailReg = RegExp(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\nexport default class Passwordrec extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const userdata = {\n        email: this.state.email\n      };\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n\n      let formErrors = _objectSpread({}, this.state.formErrors);\n\n      switch (name) {\n        case \"email\":\n          formErrors.email = value.length === 0 || !emailReg.test(value) ? \"Enter a valid email address\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      formErrors: {\n        email: \"\"\n      }\n    };\n  }\n\n  render() {\n    const formErrors = this.state.formErrors;\n    return React.createElement(\"div\", {\n      className: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password-rec\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Enter you email address:\"), React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      id: \"password-rec\",\n      onBlur: this.handleChange,\n      placeholder: \"Email\",\n      formNoValidate: true,\n      className: formErrors.email.length > 0 ? \"error\" : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), formErrors.email.length > 0 && React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, formErrors.email), React.createElement(\"button\", {\n      className: \"btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}","map":{"version":3,"sources":["/home/bennie/Desktop/project/codemunit-frontend/codemunit/src/Users/Passwordrec.js"],"names":["React","Component","emailReg","RegExp","Passwordrec","constructor","props","handleSubmit","e","preventDefault","userdata","email","state","handleChange","target","name","value","formErrors","length","test","setState","render"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,MAAMC,QAAQ,GAAGC,MAAM,CAAC,sEAAD,CAAvB;AAEA,eAAe,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAC/CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBC,YAVmB,GAUJC,CAAC,IAAI;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,QAAQ,GAAG;AACbC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD;AADL,OAAjB;AAGH,KAfkB;;AAAA,SAiBnBE,YAjBmB,GAiBJL,CAAC,IAAI;AAChBA,MAAAA,CAAC,CAACC,cAAF;AADgB,wBAEQD,CAAC,CAACM,MAFV;AAAA,YAERC,IAFQ,aAERA,IAFQ;AAAA,YAEFC,KAFE,aAEFA,KAFE;;AAGhB,UAAIC,UAAU,qBAAQ,KAAKL,KAAL,CAAWK,UAAnB,CAAd;;AAEA,cAAQF,IAAR;AACI,aAAK,OAAL;AACIE,UAAAA,UAAU,CAACN,KAAX,GAAoBK,KAAK,CAACE,MAAN,KAAiB,CAAjB,IAAsB,CAAChB,QAAQ,CAACiB,IAAT,CAAcH,KAAd,CAAxB,GAAgD,6BAAhD,GAAgF,EAAnG;AACJ;;AACA;AACA;AALJ;;AAQA,WAAKI,QAAL,CAAc;AAAEH,QAAAA,UAAF;AAAc,SAACF,IAAD,GAAQC;AAAtB,OAAd;AACH,KA/BkB;;AAEf,SAAKJ,KAAL,GAAa;AACTD,MAAAA,KAAK,EAAE,EADE;AAETM,MAAAA,UAAU,EAAE;AACRN,QAAAA,KAAK,EAAE;AADC;AAFH,KAAb;AAMH;;AAwBDU,EAAAA,MAAM,GAAG;AAAA,UACGJ,UADH,GACkB,KAAKL,KADvB,CACGK,UADH;AAEL,WACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAEI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,IAAI,EAAC,OAAzB;AAAiC,MAAA,EAAE,EAAC,cAApC;AAAmD,MAAA,MAAM,EAAE,KAAKJ,YAAhE;AAA8E,MAAA,WAAW,EAAC,OAA1F;AAAkG,MAAA,cAAc,MAAhH;AAAiH,MAAA,SAAS,EAAEI,UAAU,CAACN,KAAX,CAAiBO,MAAjB,GAA0B,CAA1B,GAA8B,OAA9B,GAAwC,IAApK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGKD,UAAU,CAACN,KAAX,CAAiBO,MAAjB,GAA0B,CAA1B,IACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQD,UAAU,CAACN,KAAnB,CAJR,EAMI;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,CADJ;AAUH;;AA7C8C","sourcesContent":["import React, { Component } from 'react'\n\nconst emailReg = RegExp(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)\n\nexport default class Passwordrec extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            formErrors: {\n                email: \"\"\n            }\n        }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        const userdata = {\n            email: this.state.email\n        }\n    }\n\n    handleChange = e => {\n        e.preventDefault();\n        const { name, value } = e.target;\n        let formErrors = { ...this.state.formErrors };\n\n        switch (name) {\n            case \"email\":\n                formErrors.email = (value.length === 0 || !emailReg.test(value)) ? \"Enter a valid email address\" : \"\";\n            break;\n            default:\n            break;\n        }\n\n        this.setState({ formErrors, [name]: value })\n    }\n    render() {\n        const { formErrors } = this.state;\n        return (\n            <div className=\"modal\">\n                <label htmlFor=\"password-rec\">Enter you email address:</label>\n                <input type=\"email\" name=\"email\" id=\"password-rec\" onBlur={this.handleChange} placeholder=\"Email\" formNoValidate className={formErrors.email.length > 0 ? \"error\" : null}/>\n                {formErrors.email.length > 0 && (\n                    <small>{formErrors.email}</small>\n                )}\n                <button className=\"btn-primary\">Submit</button>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}