{"ast":null,"code":"import _slicedToArray from \"/home/bennie/Desktop/project/codemunit-frontend/codemunit/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bennie/Desktop/project/codemunit-frontend/codemunit/src/landing-page/components/Header.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Nav from './Nav';\n\nfunction useOnScreen(options) {\n  const ref = React.useRef();\n\n  const _React$useState = React.useState(fa),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        intersect = _React$useState2[0],\n        setIntersect = _React$useState2[1];\n\n  React.useEffect(() => {\n    const observer = new IntersectionObserver(([entry]) => {\n      setIntersect(entry.isIntersecting);\n    }, options);\n\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n\n    return () => {\n      if (ref.current) {\n        observer.unobserve(ref.current);\n      }\n    };\n  }, [ref, options]);\n  return [ref, intersect];\n}\n\nexport default function Header({\n  children,\n  hero,\n  nav\n}) {\n  const _useOnScreen = useOnScreen({\n    rootMargin: '690px'\n  }),\n        _useOnScreen2 = _slicedToArray(_useOnScreen, 2),\n        ref = _useOnScreen2[0],\n        intersect = _useOnScreen2[1];\n\n  return React.createElement(\"header\", {\n    className: hero,\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bg-color\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    navProps: intersect ? \"navProps\" : \"navNeg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), children)));\n}\nHeader.defaultProps = {\n  hero: \"defaultHero\"\n};","map":{"version":3,"sources":["/home/bennie/Desktop/project/codemunit-frontend/codemunit/src/landing-page/components/Header.js"],"names":["React","useState","useEffect","useRef","Nav","useOnScreen","options","ref","fa","intersect","setIntersect","observer","IntersectionObserver","entry","isIntersecting","current","observe","unobserve","Header","children","hero","nav","rootMargin","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAGA,SAASC,WAAT,CAAsBC,OAAtB,EAA+B;AAC7B,QAAMC,GAAG,GAAGP,KAAK,CAACG,MAAN,EAAZ;;AAD6B,0BAEOH,KAAK,CAACC,QAAN,CAAeO,EAAf,CAFP;AAAA;AAAA,QAErBC,SAFqB;AAAA,QAEVC,YAFU;;AAI7BV,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAK;AACnB,UAAMS,QAAQ,GAAG,IAAIC,oBAAJ,CAAyB,CAAC,CAACC,KAAD,CAAD,KAAY;AACpDH,MAAAA,YAAY,CAACG,KAAK,CAACC,cAAP,CAAZ;AACD,KAFgB,EAEdR,OAFc,CAAjB;;AAIA,QAAGC,GAAG,CAACQ,OAAP,EAAe;AACbJ,MAAAA,QAAQ,CAACK,OAAT,CAAiBT,GAAG,CAACQ,OAArB;AACD;;AAED,WAAO,MAAM;AACX,UAAIR,GAAG,CAACQ,OAAR,EAAiB;AACfJ,QAAAA,QAAQ,CAACM,SAAT,CAAmBV,GAAG,CAACQ,OAAvB;AACD;AACF,KAJD;AAKD,GAdD,EAcE,CAACR,GAAD,EAAMD,OAAN,CAdF;AAgBA,SAAO,CAACC,GAAD,EAAME,SAAN,CAAP;AACD;;AAED,eAAe,SAASS,MAAT,CAAgB;AAACC,EAAAA,QAAD;AAAWC,EAAAA,IAAX;AAAiBC,EAAAA;AAAjB,CAAhB,EAAuC;AAAA,uBAEzBhB,WAAW,CAAC;AACrCiB,IAAAA,UAAU,EAAE;AADyB,GAAD,CAFc;AAAA;AAAA,QAE5Cf,GAF4C;AAAA,QAEvCE,SAFuC;;AAKlD,SACE;AAAQ,IAAA,SAAS,EAAEW,IAAnB;AAAyB,IAAA,GAAG,EAAEb,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,QAAQ,EAAEE,SAAS,wBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGU,QAFH,CADF,CADF,CADF;AAUH;AAEDD,MAAM,CAACK,YAAP,GAAsB;AAClBH,EAAAA,IAAI,EAAC;AADa,CAAtB","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport Nav from './Nav'\n\n\nfunction useOnScreen (options) {\n  const ref = React.useRef();\n  const [ intersect, setIntersect ] = React.useState(fa);\n\n  React.useEffect(()=> {\n    const observer = new IntersectionObserver(([entry])=> {\n      setIntersect(entry.isIntersecting);\n    }, options)\n\n    if(ref.current){\n      observer.observe(ref.current);\n    }\n\n    return () => {\n      if (ref.current) {\n        observer.unobserve(ref.current);\n      }\n    }\n  },[ref, options]);\n\n  return [ref, intersect];\n}\n\nexport default function Header({children, hero, nav}) {\n\n  const [ ref, intersect ] = useOnScreen({\n    rootMargin: '690px'\n  });\n    return (\n      <header className={hero} ref={ref}>\n        <div className=\"bg-color\">\n          <div className=\"container\">\n            <Nav navProps={intersect?`navProps`:`navNeg`}/>\n            {children}\n          </div>\n        </div>\n      </header>\n    );\n}\n\nHeader.defaultProps = {\n    hero:\"defaultHero\"\n};\n"]},"metadata":{},"sourceType":"module"}