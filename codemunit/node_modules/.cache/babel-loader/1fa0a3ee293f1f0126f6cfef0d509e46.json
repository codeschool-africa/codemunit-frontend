{"ast":null,"code":"import { useState, useMemo } from 'react';\n\nvar useList = function (initialList) {\n  if (initialList === void 0) {\n    initialList = [];\n  }\n\n  var _a = useState(initialList),\n      list = _a[0],\n      set = _a[1];\n\n  var utils = useMemo(function () {\n    return {\n      set: set,\n      clear: function () {\n        return set([]);\n      },\n      updateAt: function (index, entry) {\n        return set(function (currentList) {\n          return currentList.slice(0, index).concat([entry], currentList.slice(index + 1));\n        });\n      },\n      remove: function (index) {\n        return set(function (currentList) {\n          return currentList.slice(0, index).concat(currentList.slice(index + 1));\n        });\n      },\n      push: function () {\n        var entry = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          entry[_i] = arguments[_i];\n        }\n\n        return set(function (currentList) {\n          return currentList.concat(entry);\n        });\n      },\n      filter: function (fn) {\n        return set(function (currentList) {\n          return currentList.filter(fn);\n        });\n      },\n      sort: function (fn) {\n        return set(function (currentList) {\n          return currentList.slice().sort(fn);\n        });\n      },\n      reset: function () {\n        return set(initialList.slice());\n      }\n    };\n  }, [set]);\n  return [list, utils];\n};\n\nexport default useList;","map":null,"metadata":{},"sourceType":"module"}