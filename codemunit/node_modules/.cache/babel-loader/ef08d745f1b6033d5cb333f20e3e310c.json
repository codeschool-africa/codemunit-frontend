{"ast":null,"code":"import _defineProperty from \"/home/bennie/Desktop/project/codemunit-frontend/codemunit/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_SCREAMS, LIKE_SCREAM, UNLIKE_SCREAM, LOADING_DATA, DELETE_SCREAM, POST_SCREAM, SET_SCREAM, SUBMIT_COMMENT } from '../types/types';\nconst initialState = {\n  screams: [],\n  scream: {},\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOADING_DATA:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case SET_SCREAMS:\n      return _objectSpread({}, state, {\n        screams: action.payload,\n        loading: false\n      });\n\n    case SET_SCREAM:\n      return _objectSpread({}, state, {\n        scream: action.payload\n      });\n\n    case LIKE_SCREAM:\n    case UNLIKE_SCREAM:\n      let index = state.screams.findIndex(scream => scream.screamId === action.payload.screamId);\n      state.screams[index] = action.payload;\n\n      if (state.scream.screamId === action.payload.screamId) {\n        state.scream = action.payload;\n      }\n\n      return _objectSpread({}, state);\n\n    case DELETE_SCREAM:\n      index = state.screams.findIndex(scream => scream.screamId === action.payload);\n      state.screams.splice(index, 1);\n      return _objectSpread({}, state);\n\n    case POST_SCREAM:\n      return _objectSpread({}, state, {\n        screams: [action.payload, ...state.screams]\n      });\n\n    case SUBMIT_COMMENT:\n      return _objectSpread({}, state, {\n        scream: _objectSpread({}, state.scream, {\n          comments: [action.payload, ...state.scream.comments]\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/bennie/Desktop/project/codemunit-frontend/codemunit/src/redux/reducers/dataReducer.js"],"names":["SET_SCREAMS","LIKE_SCREAM","UNLIKE_SCREAM","LOADING_DATA","DELETE_SCREAM","POST_SCREAM","SET_SCREAM","SUBMIT_COMMENT","initialState","screams","scream","loading","state","action","type","payload","index","findIndex","screamId","splice","comments"],"mappings":";;;;;;AAAA,SACIA,WADJ,EAEIC,WAFJ,EAGIC,aAHJ,EAIIC,YAJJ,EAKIC,aALJ,EAMIC,WANJ,EAOIC,UAPJ,EAQIC,cARJ,QASO,gBATP;AAWA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,EADQ;AAEjBC,EAAAA,MAAM,EAAE,EAFS;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAArB;AAMA,eAAe,UAAUC,KAAK,GAAGJ,YAAlB,EAAgCK,MAAhC,EAAwC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,YAAL;AACI,+BACOS,KADP;AAEID,QAAAA,OAAO,EAAE;AAFb;;AAIJ,SAAKX,WAAL;AACI,+BACOY,KADP;AAEIH,QAAAA,OAAO,EAAEI,MAAM,CAACE,OAFpB;AAGIJ,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKL,UAAL;AACI,+BACOM,KADP;AAEIF,QAAAA,MAAM,EAAEG,MAAM,CAACE;AAFnB;;AAIJ,SAAKd,WAAL;AACA,SAAKC,aAAL;AACI,UAAIc,KAAK,GAAGJ,KAAK,CAACH,OAAN,CAAcQ,SAAd,CACPP,MAAD,IAAYA,MAAM,CAACQ,QAAP,KAAoBL,MAAM,CAACE,OAAP,CAAeG,QADvC,CAAZ;AAGAN,MAAAA,KAAK,CAACH,OAAN,CAAcO,KAAd,IAAuBH,MAAM,CAACE,OAA9B;;AACA,UAAIH,KAAK,CAACF,MAAN,CAAaQ,QAAb,KAA0BL,MAAM,CAACE,OAAP,CAAeG,QAA7C,EAAuD;AACnDN,QAAAA,KAAK,CAACF,MAAN,GAAeG,MAAM,CAACE,OAAtB;AACH;;AACD,+BACOH,KADP;;AAGJ,SAAKR,aAAL;AACIY,MAAAA,KAAK,GAAGJ,KAAK,CAACH,OAAN,CAAcQ,SAAd,CACHP,MAAD,IAAYA,MAAM,CAACQ,QAAP,KAAoBL,MAAM,CAACE,OADnC,CAAR;AAGAH,MAAAA,KAAK,CAACH,OAAN,CAAcU,MAAd,CAAqBH,KAArB,EAA4B,CAA5B;AACA,+BACOJ,KADP;;AAGJ,SAAKP,WAAL;AACI,+BACOO,KADP;AAEIH,QAAAA,OAAO,EAAE,CAACI,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACH,OAA1B;AAFb;;AAIJ,SAAKF,cAAL;AACI,+BACOK,KADP;AAEIF,QAAAA,MAAM,oBACCE,KAAK,CAACF,MADP;AAEFU,UAAAA,QAAQ,EAAE,CAACP,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACF,MAAN,CAAaU,QAAjC;AAFR;AAFV;;AAOJ;AACI,aAAOR,KAAP;AAnDR;AAqDH","sourcesContent":["import {\n    SET_SCREAMS,\n    LIKE_SCREAM,\n    UNLIKE_SCREAM,\n    LOADING_DATA,\n    DELETE_SCREAM,\n    POST_SCREAM,\n    SET_SCREAM,\n    SUBMIT_COMMENT\n} from '../types/types';\n\nconst initialState = {\n    screams: [],\n    scream: {},\n    loading: false\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case LOADING_DATA:\n            return {\n                ...state,\n                loading: true\n            };\n        case SET_SCREAMS:\n            return {\n                ...state,\n                screams: action.payload,\n                loading: false\n            };\n        case SET_SCREAM:\n            return {\n                ...state,\n                scream: action.payload\n            };\n        case LIKE_SCREAM:\n        case UNLIKE_SCREAM:\n            let index = state.screams.findIndex(\n                (scream) => scream.screamId === action.payload.screamId\n            );\n            state.screams[index] = action.payload;\n            if (state.scream.screamId === action.payload.screamId) {\n                state.scream = action.payload;\n            }\n            return {\n                ...state\n            };\n        case DELETE_SCREAM:\n            index = state.screams.findIndex(\n                (scream) => scream.screamId === action.payload\n            );\n            state.screams.splice(index, 1);\n            return {\n                ...state\n            };\n        case POST_SCREAM:\n            return {\n                ...state,\n                screams: [action.payload, ...state.screams]\n            };\n        case SUBMIT_COMMENT:\n            return {\n                ...state,\n                scream: {\n                    ...state.scream,\n                    comments: [action.payload, ...state.scream.comments]\n                }\n            };\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}