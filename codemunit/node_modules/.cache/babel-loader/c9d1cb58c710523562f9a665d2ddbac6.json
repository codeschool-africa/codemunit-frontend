{"ast":null,"code":"import _defineProperty from \"/home/bennie/Desktop/project/codemunit-frontend/codemunit/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_USER, SET_AUTHENTICATED, SET_UNAUTHENTICATED, LOADING_USER, // LIKE_SCREAM,\nUNLIKE_SCREAM, MARK_NOTIFICATIONS_READ } from '../types/types';\nconst initialState = {\n  authenticated: false,\n  loading: false,\n  credentials: {},\n  likes: [],\n  notifications: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_AUTHENTICATED:\n      return _objectSpread({}, state, {\n        authenticated: true\n      });\n\n    case SET_UNAUTHENTICATED:\n      return initialState;\n\n    case SET_USER:\n      return _objectSpread({\n        authenticated: true,\n        loading: false\n      }, action.payload);\n\n    case LOADING_USER:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n    // case LIKE_SCREAM:\n    //     return {\n    //         ...state,\n    //         likes: [\n    //             ...state.likes,\n    //             {\n    //                 userHandle: state.credentials.handle,\n    //                 screamId: action.payload.screamId\n    //             }\n    //         ]\n    //     };\n\n    case UNLIKE_SCREAM:\n      return _objectSpread({}, state, {\n        likes: state.likes.filter(like => like.screamId !== action.payload.screamId)\n      });\n\n    case MARK_NOTIFICATIONS_READ:\n      state.notifications.forEach(not => not.read = true);\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/bennie/Desktop/project/codemunit-frontend/codemunit/src/redux/reducers/userReducer.js"],"names":["SET_USER","SET_AUTHENTICATED","SET_UNAUTHENTICATED","LOADING_USER","UNLIKE_SCREAM","MARK_NOTIFICATIONS_READ","initialState","authenticated","loading","credentials","likes","notifications","state","action","type","payload","filter","like","screamId","forEach","not","read"],"mappings":";;;;;;AAAA,SACIA,QADJ,EAEIC,iBAFJ,EAGIC,mBAHJ,EAIIC,YAJJ,EAKI;AACAC,aANJ,EAOIC,uBAPJ,QAQO,gBARP;AAUA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,aAAa,EAAE,KADE;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,WAAW,EAAE,EAHI;AAIjBC,EAAAA,KAAK,EAAE,EAJU;AAKjBC,EAAAA,aAAa,EAAE;AALE,CAArB;AAQA,eAAe,UAAUC,KAAK,GAAGN,YAAlB,EAAgCO,MAAhC,EAAwC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,iBAAL;AACI,+BACOW,KADP;AAEIL,QAAAA,aAAa,EAAE;AAFnB;;AAIJ,SAAKL,mBAAL;AACI,aAAOI,YAAP;;AACJ,SAAKN,QAAL;AACI;AACIO,QAAAA,aAAa,EAAE,IADnB;AAEIC,QAAAA,OAAO,EAAE;AAFb,SAGOK,MAAM,CAACE,OAHd;;AAKJ,SAAKZ,YAAL;AACI,+BACOS,KADP;AAEIJ,QAAAA,OAAO,EAAE;AAFb;AAIJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAKJ,aAAL;AACI,+BACOQ,KADP;AAEIF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYM,MAAZ,CACFC,IAAD,IAAUA,IAAI,CAACC,QAAL,KAAkBL,MAAM,CAACE,OAAP,CAAeG,QADxC;AAFX;;AAMJ,SAAKb,uBAAL;AACIO,MAAAA,KAAK,CAACD,aAAN,CAAoBQ,OAApB,CAA6BC,GAAD,IAAUA,GAAG,CAACC,IAAJ,GAAW,IAAjD;AACA,+BACOT,KADP;;AAGJ;AACI,aAAOA,KAAP;AA3CR;AA6CH","sourcesContent":["import {\n    SET_USER,\n    SET_AUTHENTICATED,\n    SET_UNAUTHENTICATED,\n    LOADING_USER,\n    // LIKE_SCREAM,\n    UNLIKE_SCREAM,\n    MARK_NOTIFICATIONS_READ\n} from '../types/types';\n\nconst initialState = {\n    authenticated: false,\n    loading: false,\n    credentials: {},\n    likes: [],\n    notifications: []\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case SET_AUTHENTICATED:\n            return {\n                ...state,\n                authenticated: true\n            };\n        case SET_UNAUTHENTICATED:\n            return initialState;\n        case SET_USER:\n            return {\n                authenticated: true,\n                loading: false,\n                ...action.payload\n            };\n        case LOADING_USER:\n            return {\n                ...state,\n                loading: true\n            };\n        // case LIKE_SCREAM:\n        //     return {\n        //         ...state,\n        //         likes: [\n        //             ...state.likes,\n        //             {\n        //                 userHandle: state.credentials.handle,\n        //                 screamId: action.payload.screamId\n        //             }\n        //         ]\n        //     };\n        case UNLIKE_SCREAM:\n            return {\n                ...state,\n                likes: state.likes.filter(\n                    (like) => like.screamId !== action.payload.screamId\n                )\n            };\n        case MARK_NOTIFICATIONS_READ:\n            state.notifications.forEach((not) => (not.read = true));\n            return {\n                ...state\n            };\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}