{"ast":null,"code":"import _defineProperty from \"/home/bennie/Desktop/project/codemunit-frontend/codemunit/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/bennie/Desktop/project/codemunit-frontend/codemunit/src/Users/Signup.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { FaFacebookF, FaGooglePlusG } from \"react-icons/all\";\nconst emailReg = RegExp(/^\\A[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\z/);\nconst passwordReg = RegExp(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,}$/);\n\nconst formValid = (formErrors, ...rest) => {\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (formValid(this.state.formErrors)) {\n        console.log(\"\\n                ==SUBMITTING==\\n                Name: \".concat(this.state.name, \",\\n                Username: \").concat(this.state.username, \",\\n                Email: \").concat(this.state.email, \",\\n                Password: \").concat(this.state.password, \",\\n                Confirm Password: \").concat(this.state.confirmPassword, \"\\n            \"));\n      } else {\n        console.error(\"Form invalid: display the error message\");\n      }\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n\n      let formErrors = _objectSpread({}, this.state.formErrors);\n\n      switch (name) {\n        case 'name':\n          if (value.length === 0) formErrors.name = \"Field must not be empty\";else if (0 < value.length < 3) formErrors.name = \"Minimum 3 characters required\";\n          formErrors.name = \"\";\n          break;\n\n        case 'username':\n          if (value.length === 0) formErrors.username = \"Field must not be empty\";else if (0 < value.length < 3) formErrors.username = \"Minimum 3 characters required\";\n          formErrors.username = \"\";\n          break;\n\n        case 'email':\n          if (value.length < 0) formErrors.email = \"Field must not be empty\";else if (value.length > 0 && !emailReg.test(value)) formErrors.email = \"Enter a valid email address\";\n          formErrors.email = \"\";\n          break;\n\n        case 'password':\n          if (value.length < 0) formErrors.password = \"Field must not be empty\";else if (value.length > 0 && !passwordReg.test(value)) formErrors.password = \"Your password isn't strong\";\n          formErrors.password = \"\";\n          break;\n\n        case 'confirmPassword':\n          if (value.length < 0) formErrors.confirmPassword = \"Field must not be empty\";else if (value.length > 0 && this.state.confirmPassword !== this.state.password) formErrors.confirmPassword = \"Passwords must match\";\n          formErrors.confirmPassword = \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      });\n    };\n\n    this.state = {\n      name: null,\n      username: null,\n      email: null,\n      password: null,\n      confirmPassword: null,\n      formErrors: {\n        name: null,\n        username: null,\n        email: null,\n        password: null,\n        confirmPassword: null\n      }\n    };\n  }\n\n  render() {\n    const formErrors = this.state.formErrors;\n    return React.createElement(\"div\", {\n      className: \"form-container sign-up-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Create an account\"), React.createElement(\"div\", {\n      className: \"social-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(FaFacebookF, {\n      className: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(Link, {\n      to: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(FaGooglePlusG, {\n      className: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }))), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"or use your email for registration\"), React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"name-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Your Name\"), React.createElement(\"input\", {\n      className: formErrors.name.length > 0 ? \"error\" : null,\n      placeholder: \"First Name\",\n      type: \"text\",\n      name: \"firstName\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), formErrors.name.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, formErrors.name)), React.createElement(\"div\", {\n      className: \"name-username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }))), React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      autoComplete: \"new-password\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"confirmPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Confirm password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"confirmPassword\",\n      id: \"confirmPassword\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn-primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Register\")));\n  }\n\n}\n;","map":{"version":3,"sources":["/home/bennie/Desktop/project/codemunit-frontend/codemunit/src/Users/Signup.js"],"names":["React","Component","Link","FaFacebookF","FaGooglePlusG","emailReg","RegExp","passwordReg","formValid","formErrors","rest","valid","Object","values","forEach","val","length","Signup","constructor","props","handleSubmit","e","preventDefault","state","console","log","name","username","email","password","confirmPassword","error","handleChange","target","value","test","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\"\nimport { FaFacebookF, FaGooglePlusG } from \"react-icons/all\"\n\nconst emailReg = RegExp(/^\\A[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\z/)\nconst passwordReg = RegExp(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,}$/);\n\nconst formValid = (formErrors, ...rest) => {\n    let valid = true;\n\n    // validate form errors being empty\n    Object.values(formErrors).forEach(val => {\n        val.length > 0 && (valid = false);\n    });\n\n    // validate the form was filled out\n    Object.values(rest).forEach(val => {\n        val === null && (valid = false);\n    });\n\n    return valid;\n}\n\nexport default class Signup extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            name: null,\n            username: null,\n            email: null,\n            password: null,\n            confirmPassword: null,\n            formErrors: {\n                name: null,\n                username: null,\n                email: null,\n                password: null,\n                confirmPassword: null\n            }\n        };\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        if (formValid(this.state.formErrors)) {\n            console.log(`\n                ==SUBMITTING==\n                Name: ${this.state.name},\n                Username: ${this.state.username},\n                Email: ${this.state.email},\n                Password: ${this.state.password},\n                Confirm Password: ${this.state.confirmPassword}\n            `);\n        } else {\n            console.error(`Form invalid: display the error message`);\n        }\n    }\n\n    handleChange = e => {\n        e.preventDefault();\n        const { name, value } = e.target;\n        let formErrors = { ...this.state.formErrors };\n\n        switch (name) {\n            case 'name':\n             if (value.length === 0 ) formErrors.name = \"Field must not be empty\";\n             else if (0 < value.length < 3 ) formErrors.name = \"Minimum 3 characters required\";\n             formErrors.name = \"\";\n            break;\n            case 'username':\n                if (value.length === 0 ) formErrors.username = \"Field must not be empty\";\n                else if (0 < value.length < 3 ) formErrors.username = \"Minimum 3 characters required\";\n                formErrors.username = \"\";\n            break;\n            case 'email':\n                if (value.length < 0 ) formErrors.email = \"Field must not be empty\";\n                else if (value.length > 0 && !emailReg.test(value)) formErrors.email = \"Enter a valid email address\";\n                formErrors.email = \"\";\n            break;\n            case 'password':\n                if (value.length < 0 ) formErrors.password = \"Field must not be empty\";\n                else if (value.length > 0 && !passwordReg.test(value)) formErrors.password = \"Your password isn't strong\";\n                formErrors.password = \"\";\n            break;\n            case 'confirmPassword':\n                if (value.length < 0 ) formErrors.confirmPassword = \"Field must not be empty\";\n                else if (value.length > 0 && this.state.confirmPassword !== (this.state.password)) formErrors.confirmPassword = \"Passwords must match\";\n                formErrors.confirmPassword = \"\";\n            break;\n            default:\n             break;\n        }\n\n        this.setState({ formErrors, [name]: value });\n    };\n\n\n    render() {\n        const { formErrors } = this.state;\n        return (\n            <div className=\"form-container sign-up-container\">\n                <form onSubmit={this.handleSubmit}>\n                    <h1>Create an account</h1>\n                    <div className=\"social-container\">\n                        <Link to=\"\"><FaFacebookF className=\"icon\"/></Link>\n                        <Link to=\"\"><FaGooglePlusG className=\"icon\"/></Link>\n                    </div>\n                    <span>or use your email for registration</span>\n                    <div className=\"name\">\n                        <div className=\"name-name\">\n                            <label htmlFor=\"name\">Your Name</label>\n                            <input\n                                className={formErrors.name.length > 0 ? \"error\" : null}\n                                placeholder=\"First Name\"\n                                type=\"text\"\n                                name=\"firstName\"\n                                noValidate\n                                onChange={this.handleChange}\n                            />\n                            {formErrors.name.length > 0 && (\n                                <span className=\"errorMessage\">{formErrors.name}</span>\n                            )}\n                        </div>\n                        <div className=\"name-username\">\n                            <label htmlFor=\"username\">Username</label>\n                            <input type=\"text\" name=\"username\" noValidate onChange={this.handleChange}/>\n                        </div>\n                    </div>\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" name=\"email\" id=\"email\" noValidate onChange={this.handleChange}/>\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" name=\"password\" id=\"password\" autoComplete=\"new-password\" noValidate onChange={this.handleChange}/>\n                    <label htmlFor=\"confirmPassword\">Confirm password</label>\n                    <input type=\"password\" name=\"confirmPassword\" id=\"confirmPassword\" noValidate onChange={this.handleChange}/>\n                    <button className=\"btn-primary\" type=\"submit\">Register</button>\n                </form>\n            </div>\n        )\n    }\n}\n;\n"]},"metadata":{},"sourceType":"module"}